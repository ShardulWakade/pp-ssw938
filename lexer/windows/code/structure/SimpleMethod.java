package structure;

import java.util.*;

public class SimpleMethod {
    private String enclosingScopeName;
    private String methodName;
    private String returnType;
    private ArrayList<String> args = new ArrayList<>();

    public SimpleMethod(String returnType, String methodName, ArrayList<String> args){
        this("", returnType,  methodName, args);
    }

    public SimpleMethod(String enclosingScopeName, String returnType, String methodName, ArrayList<String> args){
        this.enclosingScopeName = enclosingScopeName;
        this.methodName = methodName;
        this.returnType = returnType;
        this.args = args;
    }

    public String getEnclosingScopeName() {
        return enclosingScopeName;
    }

    public ArrayList<String> getArgs() {
        return args;
    }

    public String getMethodName() {
        return methodName;
    }

    public boolean isGlobal(){
        return this.methodName.equals("");
    }

    public String getReturnType() {
        return returnType;
    }

    // Auto Generated by VS Code
    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((enclosingScopeName == null) ? 0 : enclosingScopeName.hashCode());
        result = prime * result + ((methodName == null) ? 0 : methodName.hashCode());
        result = prime * result + ((args == null) ? 0 : args.hashCode());
        return result;
    }

    // Auto Generated by VS Code
    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        SimpleMethod other = (SimpleMethod) obj;
        if (enclosingScopeName == null) {
            if (other.enclosingScopeName != null)
                return false;
        } else if (!enclosingScopeName.equals(other.enclosingScopeName))
            return false;
        if (methodName == null) {
            if (other.methodName != null)
                return false;
        } else if (!methodName.equals(other.methodName))
            return false;
        if (args == null) {
            if (other.args != null)
                return false;
        } else if (!args.equals(other.args))
            return false;
        return true;
    }

}
